{"version":3,"sources":["contexts/authContext.js","components/Navbar.js","components/Home.js","components/Signup.js","components/Login.js","contexts/todoContext.js","components/PendingTodos.js","components/SolvedTodos.js","components/MyTodos.js","components/AddTodo.js","components/UpdateTodo.js","components/Footer.js","components/AnonRoute.js","components/PrivateRoute.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","createContext","AuthContextProvider","state","user","todos","isLoggedIn","signupError","loginError","username","password","password2","axios","create","baseURL","process","withCredentials","handleChange","event","target","name","value","setState","signup","preventDefault","post","then","catch","err","login","logout","data","Provider","this","props","children","Component","Navbar","Consumer","context","className","to","onClick","Home","Signup","onSubmit","type","onChange","Login","TodoContext","TodoContextProvider","description","pendingToggle","solvedToggle","updateToggle","componentDidMount","get","todo","togglePendingFunc","toggleSolvedFunc","addTodo","createdTimestamp","Date","toDateString","console","log","updateTodo","id","put","filter","oneTodo","_id","setTask","solveOneTodo","solvedTimestamp","solved","deleteTodo","delete","PendingTodos","map","key","SolvedTodos","MyTodos","AddTodo","UpdateTodo","match","params","Footer","rel","href","AnonRoute","component","rest","render","PrivateRoute","App","exact","path","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.e1d1a539.chunk.js","sourcesContent":["import React, { createContext, Component } from 'react';\nimport axios from 'axios';\n\nexport const AuthContext = createContext();\n\nclass AuthContextProvider extends Component {\n  state = { \n    user: null,\n    todos: [],\n    isLoggedIn: false,\n    signupError: false,\n    loginError: false,\n    username: \"\",\n    password: \"\",\n    password2: \"\",\n    axios: axios.create({baseURL: process.env.REACT_APP_API_URL,\n    withCredentials: true})\n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  signup = event => {\n    event.preventDefault();\n    const { username, password, password2 } = this.state;\n    if (password === password2) {\n    this.state.axios\n        .post('/auth/signup', {username, password})\n        .then(({user}) => this.setState({ isLoggedIn: true, user}))\n        .catch(err => this.setState({ isLoggedIn: false}))\n    } else {\n      this.setState({signupError: true})\n    }\n    this.setState({ username: \"\", password: \"\", password2: \"\"})\n  }\n\n  login = event => {\n    event.preventDefault();\n    const { username, password } = this.state;\n    this.state.axios\n        .post('/auth/login', {username, password})\n        .then(({user}) => {\n          this.setState({ isLoggedIn: true, user})\n        })\n        .catch(err => {\n          this.setState({ isLoggedIn: false, loginError: true})\n        })\n    this.setState({ username: \"\", password: \"\"})\n  }\n\n  logout = () => {\n    this.state.axios\n      .post('/auth/logout', {})\n      .then(({data}) => data);\n    this.setState({isLoggedIn: false, user: null})\n  }\n\n  render () {\n    return (\n      <AuthContext.Provider value={{\n        ...this.state, \n        handleChange: this.handleChange,\n        login: this.login,\n        signup: this.signup,\n        logout: this.logout\n      }}>\n        {this.props.children}\n      </AuthContext.Provider>\n    );\n  };\n};\n\nexport default AuthContextProvider;\n\n\n\n\n\n\n\n\n\n\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { AuthContext } from \"./../contexts/authContext\";\n\nfunction Navbar() {\n  return (\n    <AuthContext.Consumer>{(context) => {\n      const { isLoggedIn, logout} = context;\n      return (\n        <div>\n          <nav className=\"navbar\">\n            <div className=\"logo-div\">\n              <Link to={'/'}>\n                TO DO\n              </Link>\n            </div>\n            {isLoggedIn ? (\n              <div className=\"auth-div\">\n                <div>\n                  <Link to={'/add'}>\n                   <button className=\"nav-button\">Task manager</button>\n                  </Link>\n                </div>\n                <div>\n                  <button onClick={logout} className=\"nav-button\">Logout</button>\n                </div>\n              </div>\n            ) : (\n              <div className=\"auth-div\">\n                <div>\n                  <Link to={'/login'}>\n                    <button className=\"nav-button\">login</button>\n                  </Link>\n                </div>\n                <div>\n                  <Link to={'/signup'}>\n                    <button className=\"nav-button\">Signup</button>\n                  </Link>\n                </div>\n              </div>\n            )}\n          </nav>\n        </div>\n      )\n    }}</AuthContext.Consumer>\n  )\n}\n\nexport default Navbar;\n","import React from 'react'\n\nfunction Home() {\n  return (\n    <div className=\"section-div\">\n      <h1 className=\"title\">WELCOME</h1>\n      <hr></hr>\n      <p className=\"home-paragraph\">\n        This is a simple \"TO DO\" fullstack web application built using the MERN stack. \n        <br></br>\n        <br></br>\n        Special attention was given to Context API.\n        <br></br>\n        <br></br>\n        Enjoy!\n      </p>\n    </div>\n  )\n}\n\nexport default Home\n","import React from 'react'\nimport { AuthContext } from \"./../contexts/authContext\"\n\nfunction Signup() {\n  return (\n    <AuthContext.Consumer>{(context) => {\n      const { username, password, password2, handleChange, signup, signupError } = context;\n      return (\n        <div className=\"section-div\">\n          <h1 className=\"title\">SIGNUP</h1>\n          <hr></hr>\n          <form onSubmit={signup}>\n            <div className=\"form-group\">\n              <label>Username:</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Confirm password:</label>\n              <input\n                type=\"password\"\n                name=\"password2\"\n                value={password2}\n                onChange={handleChange}\n              />\n            </div>\n            <button className=\"submit-button\" type=\"submit\">Signup</button>\n          </form>\n          {signupError ? (\n            <div className=\"form-validation\">\n              <span>The passwords you entered do not match.</span> \n                <br></br>\n                <br></br>\n              Try again!\n            </div>\n          ) : ( null)}\n        </div>\n     )\n    }}\n    </AuthContext.Consumer>\n  )\n}\n\nexport default Signup;","import React from 'react'\nimport { AuthContext } from \"./../contexts/authContext\"\n\n\nfunction Login() {\n  return (\n    <AuthContext.Consumer>{(context) => {\n      const { username, password, handleChange, login, loginError } = context;\n      return (\n        <div className=\"section-div\">\n          <h1 className=\"title\">LOGIN</h1>\n          <hr></hr>\n          <form onSubmit={login}>\n            <div className=\"form-group\">\n              <label>Username:</label>\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={username}\n                onChange={handleChange}\n              />\n            </div>\n            <div className=\"form-group\">\n              <label>Password:</label>\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n              />\n            </div>\n            <button className=\"submit-button\" type=\"submit\">Login</button>\n          </form>\n\n          {loginError ? (\n            <div className=\"form-validation\">\n              <span>The credentials you entered are incorrect.</span>\n              <br></br>\n              <br></br>\n              Try again!\n            </div>\n          ) : ( null )}\n\n        </div>\n      )\n    }}\n    </AuthContext.Consumer>\n  )\n}\n\nexport default Login;","import React, { createContext, Component } from 'react';\nimport axios from 'axios';\n\nexport const TodoContext = createContext();\n\nclass TodoContextProvider extends Component {\n  state = {\n    user: null,\n    todos: [],\n    name: \"\",\n    description: \"\",\n    pendingToggle: true,\n    solvedToggle: false,\n    updateToggle: false,\n    axios: axios.create({baseURL: process.env.REACT_APP_API_URL,\n      withCredentials: true})\n  }\n\n  componentDidMount = () => {\n    this.state.axios\n    .get('/auth')\n    .then(({data}) => {\n      this.setState({user: data.username, todos: data.todo})\n    });  \n  }\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  togglePendingFunc = () => {\n    this.setState({pendingToggle: !this.state.pendingToggle, solvedToggle: false})\n  }\n\n  toggleSolvedFunc = () => {\n    this.setState({solvedToggle: !this.state.solvedToggle, pendingToggle: false})\n  }\n\n  addTodo = (event) => {\n    event.preventDefault();\n    const { name, description } = this.state;\n    let createdTimestamp = new Date().toDateString();\n    this.state.axios\n      .post('/todos', {name, description, createdTimestamp})\n      .then(({data}) => {\n        let todos = [...this.state.todos, data];\n        this.setState({name: \"\", description: \"\", todos});\n      })\n      .catch(err => console.log(err));\n  };\n\n  updateTodo = (id) => {\n    const { name, description } = this.state;\n    this.state.axios\n      .put(`/todos/${id}`, {name, description})\n      .then(({data}) => {\n        let todo = this.state.todos.filter(oneTodo => {\n          return id === oneTodo._id\n        })\n        todo[0].name = name;\n        todo[0].description = description;\n        this.setState({name: \"\", description: \"\", todos: [...this.state.todos, todo]});\n      })\n      .catch(err => console.log(err));\n  }\n\n  setTask = (id) => {\n    this.state.todos.filter(oneTodo => {\n      if(id === oneTodo._id){\n        this.setState({name: oneTodo.name, description: oneTodo.description})\n      }\n      return oneTodo;\n    })\n  }\n\n  solveOneTodo = (oneTodo) => {\n    const { _id, name, description } = oneTodo;\n    let solvedTimestamp = new Date().toDateString()\n    this.state.axios\n      .put(`/todos/${_id}`, {name, description, solvedTimestamp, solved: true})\n      .then(({data}) => {\n        let todo = this.state.todos.filter(oneTodo => {\n          return _id === oneTodo._id\n        })\n        todo[0].solved = true;\n        todo[0].solvedTimestamp = solvedTimestamp;\n        this.setState({todos: [...this.state.todos, todo]});\n      })\n      .catch(err => console.log(err))\n  }\n\n  deleteTodo = (id) => {\n    this.state.axios\n      .delete(`/todos/${id}`, {})\n      .then(({data}) => {\n        let todos = this.state.todos.filter(oneTodo => {\n          return oneTodo._id !== id\n        })\n        this.setState({name: \"\", description: \"\", todos})\n      })\n      .catch(err => console.log(err))\n  };\n\n  render () {\n    return (\n      <TodoContext.Provider value={{\n        ...this.state,\n        handleChange: this.handleChange,\n        addTodo: this.addTodo,\n        updateTodo: this.updateTodo,\n        deleteTodo: this.deleteTodo,\n        togglePendingFunc: this.togglePendingFunc,\n        toggleSolvedFunc: this.toggleSolvedFunc,\n        solveOneTodo: this.solveOneTodo,\n        setTask: this.setTask\n      }}>\n        {this.props.children}\n      </TodoContext.Provider>\n      );\n  };\n};\n\nexport default TodoContextProvider;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { TodoContext } from \"../contexts/todoContext\"\n\nfunction PendingTodos() {\n  return (\n    <TodoContext.Consumer>{(context) => {\n      const {todos, solveOneTodo, setTask} = context;\n      return(\n        <div>\n          <p>Your pending tasks</p>\n          {todos.map(oneTodo => {\n            return(\n              oneTodo.solved === false ? (\n                <div className=\"task-card\" key={oneTodo._id}>\n                  <div className=\"task-content\">\n                    <div className=\"task-item-title\">{oneTodo.name}</div>\n                    <div className=\"task-item\">{oneTodo.description}</div>\n                    <div className=\"task-item-date\"><span>Created on</span>: {oneTodo.createdTimestamp}</div>\n                  </div>\n                  <div>\n                    <Link to={`/update/${oneTodo._id}`}>\n                      <button className=\"task-button\" onClick={() => {setTask(oneTodo._id)}}>Update task</button>\n                    </Link>\n                    <button className=\"task-button\" onClick={() => {solveOneTodo(oneTodo)}}>Solve task</button>\n                  </div>\n                </div>\n              ) : ( null ) \n            )\n          })}\n          </div>\n      )\n    }}\n    </TodoContext.Consumer>\n  )\n}\n\nexport default PendingTodos;\n","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { TodoContext } from \"../contexts/todoContext\"\n\nfunction SolvedTodos() {\n  return (\n    <TodoContext.Consumer>{(context) => {\n      const {todos, setTask} = context;\n      return(\n        <div>\n          <p>Your solved tasks</p>\n          { todos.map(oneTodo => {\n            return (\n              oneTodo.solved === true ? (\n                 <div className=\"task-card\" key={oneTodo._id}>\n                  <div className=\"task-content\">\n                    <div className=\"task-item-title\">{oneTodo.name}</div>\n                    <div className=\"task-item\">{oneTodo.description}</div>\n                    <div className=\"task-item-date\"><span>Created on</span>: {oneTodo.createdTimestamp}</div>\n                    <div className=\"task-item-date\"><span>Solved on</span>: {oneTodo.solvedTimestamp}</div>\n                  </div>\n                   <Link to={`/update/${oneTodo._id}`}>\n                     <button className=\"task-button\" onClick={() => {setTask(oneTodo._id)}}>Update task</button>\n                   </Link>\n                 </div>\n              ) : ( null)\n            ) \n          })}\n        </div>\n      )\n    }}\n    </TodoContext.Consumer>\n  )\n}\n\nexport default SolvedTodos;\n","import React from 'react';\nimport { TodoContext } from \"../contexts/todoContext\"\nimport PendingTodos from \"./PendingTodos\";\nimport SolvedTodos from \"./SolvedTodos\";\n\nfunction MyTodos() {\n  return (\n    <TodoContext.Consumer>{(context) => {\n      const {togglePendingFunc, toggleSolvedFunc, pendingToggle, solvedToggle} = context;\n      return(\n        <div>\n          <div className=\"toggle-div\">\n            <button className=\"toggle-button\" onClick={togglePendingFunc}> {pendingToggle ? (\n              <div>\n                Hide pending tasks\n              </div>\n            ) : ( \n              <div>\n                Show pending tasks\n              </div>\n            )}</button>\n            <button className=\"toggle-button\" onClick={toggleSolvedFunc}>{solvedToggle ? (\n              <div>\n                Hide solved tasks\n              </div>\n            ) : ( \n              <div>\n                Show solved tasks\n              </div>\n            )}</button>\n          </div>\n          {pendingToggle ? ( <PendingTodos /> ) : ( null)}\n          {solvedToggle ? ( <SolvedTodos /> ) : ( null )}\n        </div>\n      )\n    }}\n    </TodoContext.Consumer>\n  )\n}\n\nexport default MyTodos;\n","import React from 'react';\nimport { TodoContext } from \"../contexts/todoContext\"\nimport MyTodos from \"./MyTodos\";\n\nfunction AddTodo() {\n  return (\n    <TodoContext.Consumer>{(context) => {\n      const {name, description, handleChange, addTodo} = context;\n      return(\n        <div className=\"section-div\">\n          <h1 className=\"title\">TASK MANAGER</h1>  \n          <hr></hr>\n          <form onSubmit={addTodo}>\n            <div className=\"form-group\">\n              <label>Title:</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n              />\n              </div>\n              <div className=\"form-group\">\n                <label>Description:</label>\n                <textarea\n                  name=\"description\"\n                  value={description}\n                  onChange={handleChange}\n                  />\n              </div>\n            <button className=\"add-button\" type=\"submit\">Add Task</button>\n          </form>\n          <hr></hr>\n          <MyTodos />\n        </div>\n        \n      )\n    }}\n    </TodoContext.Consumer>\n  )\n}\n\nexport default AddTodo;\n","import React from 'react'\nimport { Link } from \"react-router-dom\";\nimport { TodoContext } from \"../contexts/todoContext\"\n\nfunction UpdateTodo(props) {\n  return (\n    <TodoContext.Consumer>{(context) => {\n      const id = props.match.params.id;\n      const { name, description, deleteTodo, updateTodo, handleChange } = context;\n      return(\n      <div className=\"section-div\">\n        <h1 className=\"title\">Update task</h1>\n        <hr></hr>\n          <form>\n            <div className=\"form-group\">\n              <label>Title:</label>\n              <input\n              type=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={handleChange}\n                />\n            </div>  \n            <div className=\"form-group\">\n            <label>Description:</label>\n            <textarea\n              name=\"description\"\n              value={description}\n              onChange={handleChange}\n            />\n            </div>\n            <div className=\"account-toggles\">\n              <Link to={'/add'}>\n                <button className=\"delete-button\" onClick={() => {deleteTodo(id)}}>Delete</button>\n              </Link>\n              <Link to={'/add'}>\n                <button className=\"task-button\" onClick={() => {updateTodo(id)}} type=\"submit\">Save</button>\n              </Link>\n            </div>\n          </form>\n        </div>\n     )\n    }}\n      </TodoContext.Consumer>\n  )\n}\n\nexport default UpdateTodo\n","import React from 'react'\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      <div className=\"footer-div\">\n        <p className=\"credits\"> © Created by JP Hrubant</p>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" href='https://github.com/jphrubant'><button className=\"nav-button\">Github</button></a> \n      </div>\n    </div>\n  )\n}\n\nexport default Footer\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./../contexts/authContext\"\n\nfunction AnonRoute({ component: Component, ...rest }) {\n  return (\n    <AuthContext.Consumer>{(context) => {\n      const { isLoggedIn } = context;\n      return (\n        <Route\n          {...rest}\n          render={function(props) {\n            if (isLoggedIn) return <Redirect to=\"/add\" />;\n            else if (!isLoggedIn) return <Component {...props} />;\n          }}\n        />\n      )\n    }}\n    </AuthContext.Consumer>\n  )\n}\n\nexport default AnonRoute;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./../contexts/authContext\"\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  return (\n    <AuthContext.Consumer>{(context) => {\n      const { isLoggedIn } = context;\n      return (\n        <Route\n          {...rest}\n          render={function(props) {\n            if (isLoggedIn) return <Component {...props} />;\n            else if (!isLoggedIn) return <Redirect to=\"/login\" />;\n          }}\n        />\n      )\n    }}\n    </AuthContext.Consumer>\n  )\n}\n\nexport default PrivateRoute;","import React from 'react';\nimport './App.css';\nimport { Switch, Route} from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport Signup from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport AddTodo from \"./components/AddTodo\";\nimport UpdateTodo from \"./components/UpdateTodo\";\nimport Footer from \"./components/Footer\";\n\nimport AnonRoute from \"./components/AnonRoute\";\nimport PrivateRoute from \"./components/PrivateRoute\";\n\nimport AuthContextProvider from \"./contexts/authContext\";\nimport TodoContextProvider from \"./contexts/todoContext\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AuthContextProvider>\n        <TodoContextProvider>\n          <Navbar />\n          <Switch>\n          <Route exact path='/' component={Home}/>\n          <AnonRoute exact path='/signup' component={Signup}/>\n          <AnonRoute exact path='/login' component={Login}/>\n          <PrivateRoute exact path='/add' component={AddTodo}/>\n          <PrivateRoute exact path='/update/:id' component={UpdateTodo}/>\n          </Switch>\n        </TodoContextProvider>\n      </AuthContextProvider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}